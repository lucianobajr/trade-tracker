generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

// admin
model admin {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  created_at DateTime @default(now())

  @@map("admins")
}

// cidade
model city {
  id     String   @id @default(uuid())
  name   String
  state  String
  client client[]

  @@map("cities")
}

// clientes
model client {
  id     String @id @default(uuid())
  name   String
  adress String
  phone  String

  city   city?   @relation(fields: [cityId], references: [id], onDelete: SetNull)
  cityId String?

  sale sale[]

  @@map("clients")
}

// vendas
model sale {
  id           String @id @default(uuid())
  total_amount Float @default(0) // valor total
  amount_paid  Float @default(0) // valor pago
  discount     Float @default(0) // desconto

  date DateTime @default(now())

  client   client @relation(fields: [clientId], references: [id])
  clientId String
  item     item[]

  @@map("sales")
}

// fabricantes
model maker {
  id String @id @default(uuid())

  name    String
  site    String
  product product[]

  @@map("makers")
}

// produtos
model product {
  id String @id @default(uuid())

  name        String @unique
  description String

  stock         Float
  cost_price    Float // preço de custo
  selling_price Float // preço de venda

  maker   maker  @relation(fields: [makerId], references: [id])
  makerId String
  item    item[]

  @@map("products")
}

// itens
model item {
  id String @id @default(uuid())

  sale   sale   @relation(fields: [saleId], references: [id])
  saleId String

  product   product @relation(fields: [productId], references: [id])
  productId String

  amount Float

  @@map("items")
}
